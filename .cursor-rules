# Hugo Blog Project - Cursor Rules

## Project Overview

This is a multilingual Hugo blog with Portuguese (PT) and English (EN) content. The blog focuses on software engineering, design patterns, and technical articles.

## Project Structure

- `content/en/posts/` - English blog posts
- `content/pt/posts/` - Portuguese blog posts
- `static/uploads/YYYY/MM/` - Images and assets organized by date
- `static/css/custom-layout.css` - Custom CSS for styling
- Hugo server runs on localhost:1313

## Git Commit Standards

**CRITICAL**: All commits must follow the "Technical Conventional Commits" pattern:

### Commit Message Format

```
type(scope): short description (under 50 chars)

Detailed body with bullet points:
- Specific files added/changed and their purpose
- Technical metrics (file counts, changes, dimensions)
- CSS class names and styling details when applicable
- Functional improvements and features enabled

Clear summary of impact and functionality enabled.
```

### Commit Message Rules

- **Accuracy**: Only describe changes actually in THIS commit
- **No cross-references**: Don't mention previous commits unless directly relevant
- **Technical precision**: Include specific numbers, file names, class names
- **NO BUILD STATS**: Do not include Hugo build statistics or verification data
- **Professional tone**: Comprehensive but focused documentation
- **Conventional format**: Use feat(blog), feat(automation), fix(css), etc.

### Examples

- `feat(blog): add behavioral design patterns articles (2008-07-08)`
- `feat(automation): add Cursor/Claude workflow automation`
- `fix(css): update responsive image styling for mobile`

## Hugo Article Conversion

**Workflow Reference**: Use `.ai/workflows/hugo-article-conversion.md` for detailed steps.

### Core Requirements

- **Input**: Date (DD-MM-YYYY) + two identical filename attachments
- **Critical**: Both files must have identical names for multilingual linking
- **Output**: Hugo posts + responsive CSS + conventional git commit
- **Testing**: Always verify with development server during development

### File Placement Standards

- Posts: `content/{en,pt}/posts/YYYY-MM-DD-filename.md`
- Images: `static/uploads/YYYY/MM/image-name.png`
- CSS: Topic-specific classes with responsive max-widths (600px-800px)

## Automation Expectations

- Immediate Hugo detection of new posts
- Proper multilingual linking with identical filenames
- Responsive image styling with topic-appropriate CSS classes
- Clean commits following Technical Conventional format
- **NO BUILD VERIFICATION STATS** in commit messages
