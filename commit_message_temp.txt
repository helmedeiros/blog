refactor: organize project structure with dedicated docs and scripts directories

This commit reorganizes the project structure to improve maintainability and
professionalism by separating concerns into dedicated directories:

## Changes Made

### Scripts Organization (scripts/)
- Moved 4 Python scripts from root to scripts/ directory:
  - fix_translation_links.py (translation URL fixing)
  - update_single_slideshare.py (SlideShare embed updates)
  - update_patrick_kua_slideserve.py (SlideServe conversion)
  - review_slideshare_updates.py (embed validation)
- All 27 Python automation scripts now consolidated in scripts/
- Maintains existing scripts/README.md documentation

### Documentation Organization (docs/)
- Created new docs/ directory for all project documentation
- Moved 6 documentation files from root:
  - DOMAIN_MIGRATION_CHECKLIST.md (migration guide)
  - slideshare_final_report.md (restoration report)
  - slideshare_embed_analysis.json (technical analysis)
  - translation_output.log (process logs)
  - commit_message.txt (change documentation)
- Created comprehensive docs/README.md with project overview

### Project Structure Updates
- Updated main README.md with new directory structure section
- Added visual project tree and directory descriptions
- Removed empty temp_en_posts/ directory
- Maintained all existing functionality and build processes

## Benefits

- **Improved Organization**: Clear separation between code, docs, and content
- **Better Maintainability**: Easier to locate and manage project files
- **Professional Structure**: Standard open-source project layout
- **Enhanced Documentation**: Centralized docs with comprehensive index
- **Cleaner Root**: Reduced clutter in main directory

## Technical Impact

- No changes to Hugo build process or site functionality
- All automation scripts remain functional in new location
- Documentation remains accessible and well-organized
- Project ready for future development and collaboration

This reorganization transforms the project from a working prototype into a
well-structured, maintainable codebase suitable for long-term use and
potential open-source collaboration.
